// Generated by gencpp from file assignment_1/state.msg
// DO NOT EDIT!


#ifndef ASSIGNMENT_1_MESSAGE_STATE_H
#define ASSIGNMENT_1_MESSAGE_STATE_H

#include <ros/service_traits.h>


#include <assignment_1/stateRequest.h>
#include <assignment_1/stateResponse.h>


namespace assignment_1
{

struct state
{

typedef stateRequest Request;
typedef stateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct state
} // namespace assignment_1


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::assignment_1::state > {
  static const char* value()
  {
    return "6a2e34150c00229791cc89ff309fff21";
  }

  static const char* value(const ::assignment_1::state&) { return value(); }
};

template<>
struct DataType< ::assignment_1::state > {
  static const char* value()
  {
    return "assignment_1/state";
  }

  static const char* value(const ::assignment_1::state&) { return value(); }
};


// service_traits::MD5Sum< ::assignment_1::stateRequest> should match 
// service_traits::MD5Sum< ::assignment_1::state > 
template<>
struct MD5Sum< ::assignment_1::stateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::assignment_1::state >::value();
  }
  static const char* value(const ::assignment_1::stateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::assignment_1::stateRequest> should match 
// service_traits::DataType< ::assignment_1::state > 
template<>
struct DataType< ::assignment_1::stateRequest>
{
  static const char* value()
  {
    return DataType< ::assignment_1::state >::value();
  }
  static const char* value(const ::assignment_1::stateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::assignment_1::stateResponse> should match 
// service_traits::MD5Sum< ::assignment_1::state > 
template<>
struct MD5Sum< ::assignment_1::stateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::assignment_1::state >::value();
  }
  static const char* value(const ::assignment_1::stateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::assignment_1::stateResponse> should match 
// service_traits::DataType< ::assignment_1::state > 
template<>
struct DataType< ::assignment_1::stateResponse>
{
  static const char* value()
  {
    return DataType< ::assignment_1::state >::value();
  }
  static const char* value(const ::assignment_1::stateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ASSIGNMENT_1_MESSAGE_STATE_H
